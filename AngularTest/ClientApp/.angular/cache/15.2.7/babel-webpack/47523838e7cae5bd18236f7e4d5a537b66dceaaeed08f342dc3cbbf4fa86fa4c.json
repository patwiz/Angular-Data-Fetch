{"ast":null,"code":"\"use strict\";\n\nusing;\nSystem;\nusing;\nSystem.Collections.Generic;\nusing;\nSystem.Net;\n// -------------------------------------------------------------------------\n// if using .NET Framework\n// https://docs.microsoft.com/en-us/dotnet/api/system.web.script.serialization.javascriptserializer?view=netframework-4.8\n// This requires including the reference to System.Web.Extensions in your project\nusing;\nSystem.Web.Script.Serialization;\n// -------------------------------------------------------------------------\n// if using .Net Core\n// https://docs.microsoft.com/en-us/dotnet/api/system.text.json?view=net-5.0\nusing;\nSystem.Text.Json;\n// -------------------------------------------------------------------------\nvar ConsoleTests;\n(function (ConsoleTests) {\n  internal;\n  class Program {\n    Main(string, [], args) {\n      // replace the \"demo\" apikey below with your own key from https://www.alphavantage.co/support/#api-key\n      string;\n      QUERY_URL = \"https://www.alphavantage.co/query?function=TIME_SERIES_WEEKLY_ADJUSTED&symbol=IBM&apikey=demo\";\n      Uri;\n      queryUri = new Uri(QUERY_URL);\n      using(WebClient, client = new WebClient());\n      {\n        // -------------------------------------------------------------------------\n        // if using .NET Framework (System.Web.Script.Serialization)\n        JavaScriptSerializer;\n        js = new JavaScriptSerializer();\n        dynamic;\n        json_data = js.Deserialize(client.DownloadString(queryUri), typeof object);\n        // -------------------------------------------------------------------------\n        // if using .NET Core (System.Text.Json)\n        // using .NET Core libraries to parse JSON is more complicated. For an informative blog post\n        // https://devblogs.microsoft.com/dotnet/try-the-new-system-text-json-apis/\n        dynamic;\n        json_data = JsonSerializer.Deserialize(client.DownloadString(queryUri));\n        // -------------------------------------------------------------------------\n        // do something with the json_data\n      }\n    }\n  }\n})(ConsoleTests || (ConsoleTests = {}));","map":{"version":3,"mappings":";;AAAAA,KAAK;AAACC,MAAM;AACZD,KAAK;AAACC,MAAM,CAACC,WAAW,CAACC,OAAO;AAChCH,KAAK;AAACC,MAAM,CAACG,GAAG;AAEhB;AACA;AACA;AACA;AACAJ,KAAK;AAACC,MAAM,CAACI,GAAG,CAACC,MAAM,CAACC,aAAa;AACrC;AACA;AACA;AACAP,KAAK;AAACC,MAAM,CAACO,IAAI,CAACC,IAAI;AACtB;AAEA,IAAUC,YAAY;AAAtB,WAAUA,YAAY;EAClBC,QAAQ;EAAC,MAAMC,OAAO;IACFC,IAAI,CAACC,MAAM,IAAE,EAACC,IAAI;MAC9B;MACAD,MAAM;MAACE,SAAS,GAAG,+FAA+F;MAClHC,GAAG;MAACC,QAAQ,GAAG,IAAID,GAAG,CAACD,SAAS,CAAC;MAEvChB,KAAK,CAACmB,SAAS,EAACC,MAAM,GAAG,IAAID,SAAS,EAAE,CAAC;MACzC;QACW;QACA;QAEDE,oBAAoB;QAACC,EAAE,GAAG,IAAID,oBAAoB,EAAE;QACpDE,OAAO;QAACC,SAAS,GAAGF,EAAE,CAACG,WAAW,CAACL,MAAM,CAACM,cAAc,CAACR,QAAQ,CAAC,EAAE,OAAQS,MAAO,CAAC;QAEpF;QACA;QACA;QACA;QAEAJ,OAAO;QAACC,SAAS,GAAGI,cAAc,CAACH,WAAW,CAA8BL,MAAM,CAACM,cAAc,CAACR,QAAQ,CAAC,CAAC;QAEpH;QAEA;;IAEJ;;AAEJ,CAAC,EA5BSR,YAAY,KAAZA,YAAY","names":["using","System","Collections","Generic","Net","Web","Script","Serialization","Text","Json","ConsoleTests","internal","Program","Main","string","args","QUERY_URL","Uri","queryUri","WebClient","client","JavaScriptSerializer","js","dynamic","json_data","Deserialize","DownloadString","object","JsonSerializer"],"sourceRoot":"","sources":["C:\\Users\\colts\\source\\repos\\AngularTest\\AngularTest\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.ts"],"sourcesContent":["using System;\r\nusing System.Collections.Generic;\r\nusing System.Net;\r\n\r\n// -------------------------------------------------------------------------\r\n// if using .NET Framework\r\n// https://docs.microsoft.com/en-us/dotnet/api/system.web.script.serialization.javascriptserializer?view=netframework-4.8\r\n// This requires including the reference to System.Web.Extensions in your project\r\nusing System.Web.Script.Serialization;\r\n// -------------------------------------------------------------------------\r\n// if using .Net Core\r\n// https://docs.microsoft.com/en-us/dotnet/api/system.text.json?view=net-5.0\r\nusing System.Text.Json;\r\n// -------------------------------------------------------------------------\r\n\r\nnamespace ConsoleTests {\r\n    internal class Program {\r\n    private static void Main(string[] args) {\r\n            // replace the \"demo\" apikey below with your own key from https://www.alphavantage.co/support/#api-key\r\n            string QUERY_URL = \"https://www.alphavantage.co/query?function=TIME_SERIES_WEEKLY_ADJUSTED&symbol=IBM&apikey=demo\"\r\n            Uri queryUri = new Uri(QUERY_URL);\r\n\r\n      using(WebClient client = new WebClient())\r\n      {\r\n                 // -------------------------------------------------------------------------\r\n                 // if using .NET Framework (System.Web.Script.Serialization)\r\n\r\n                JavaScriptSerializer js = new JavaScriptSerializer();\r\n                dynamic json_data = js.Deserialize(client.DownloadString(queryUri), typeof (object));\r\n\r\n                // -------------------------------------------------------------------------\r\n                // if using .NET Core (System.Text.Json)\r\n                // using .NET Core libraries to parse JSON is more complicated. For an informative blog post\r\n                // https://devblogs.microsoft.com/dotnet/try-the-new-system-text-json-apis/\r\n\r\n                dynamic json_data = JsonSerializer.Deserialize<Dictionary<string, dynamic>>(client.DownloadString(queryUri));\r\n\r\n        // -------------------------------------------------------------------------\r\n\r\n        // do something with the json_data\r\n      }\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script","externalDependencies":[]}